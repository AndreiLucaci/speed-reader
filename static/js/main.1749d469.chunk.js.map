{"version":3,"sources":["components/Text/connect.config.ts","state/Reader/actions.ts","state/Reader/constants.ts","components/Text/Text.tsx","components/Word/Word.tsx","components/Reader/Reader.tsx","components/Reader/connect.config.ts","components/Content/Content.tsx","components/NavBar/NavBar.tsx","components/LandingPage/LandingPage.tsx","App.tsx","serviceWorker.ts","state/Reader/intitialstate.ts","state/Reader/reducer.ts","store.ts","index.tsx"],"names":["mapDispatchToProps","setText","text","type","payload","setWPM","value","wpm","setReader","valueToText","enhance","compose","connect","undefined","props","minWpm","maxWpm","step","defaultWpm","handleSliderChange","event","newValue","setState","wpms","state","initializeMarks","handleTextOnChange","bind","handleButtonOnClick","this","target","trim","i","push","Grid","container","justify","alignItems","spacing","item","xs","TextField","id","label","multiline","rows","defaultValue","style","width","margin","variant","onChange","Typography","gutterBottom","Slider","getAriaValueText","aria-labelledby","max","min","marks","valueLabelDisplay","Button","color","onClick","Component","theme","createMuiTheme","typography","fontFamily","fontSize","Word","display","justifyContent","Box","fontWeight","word","Reader","milisecondNumerator","currentWord","interval","intervalId","words","tick","computeInterval","nextProps","initWords","setWords","split","array","clearInterval","setInterval","nextWord","length","shift","useStyles","makeStyles","root","flexGrow","paper","padding","textAlign","palette","secondary","CenteredGrid","classes","className","createStyles","menuButton","marginRight","title","NavBar","history","useHistory","React","useState","anchorEl","setAnchorEl","AppBar","position","Toolbar","IconButton","edge","aria-label","currentTarget","keepMounted","open","Boolean","onClose","MenuItem","App","exact","path","component","LandingPage","Content","window","location","hostname","match","initialState","store","createStore","action","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1749d469.chunk.js","sourcesContent":["import { setText, setWPM, setReader } from \"../../state/Reader/actions\";\n\nexport const mapDispatchToProps = {\n  setText,\n  setWPM,\n  setReader\n};\n\nexport default {\n  mapStateToProps: {},\n  mapDispatchToProps\n};\n","import { SET_TEXT, SET_WPM, SET_READER } from \"./constants\";\n\nexport const setText = (text: string) => ({\n  type: SET_TEXT,\n  payload: { text }\n});\n\nexport const setWPM = (value: number) => ({\n  type: SET_WPM,\n  payload: { wpm: value }\n});\n\nexport const setReader = (text: string, wpm: number) => ({\n  type: SET_READER,\n  payload: {\n    text,\n    wpm\n  }\n});\n","export const SET_TEXT = \"SET_TEXT\";\nexport const SET_WPM = \"SET_WPM\";\nexport const SET_READER = \"SET_READER\";\n","import React, { Component } from \"react\";\n\nimport { compose } from \"recompose\";\nimport { connect } from \"react-redux\";\n\nimport { mapDispatchToProps } from \"./connect.config\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider, { Mark } from \"@material-ui/core/Slider\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\ntype TextState = {\n  text: string;\n  wpm: number;\n};\n\ntype TextProps = {\n  setReader: (text: string, wpm: number) => void;\n};\n\nconst createWpm = (value: number): Mark => ({\n  value\n  // label: valueToText(value)\n});\n\nconst valueToText = (value: number) => `${value} WPM`;\n\nconst enhance = compose(connect(undefined, mapDispatchToProps));\n\nclass Text extends Component<TextProps, TextState> {\n  minWpm = 200;\n  maxWpm = 700;\n  step = 100;\n  defaultWpm = 300;\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      text: \"\",\n      wpm: this.minWpm\n    };\n\n    this.initializeMarks();\n\n    this.handleTextOnChange = this.handleTextOnChange.bind(this);\n    this.handleButtonOnClick = this.handleButtonOnClick.bind(this);\n  }\n\n  handleTextOnChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\n    this.setState({\n      text: event.target.value.trim()\n    });\n  }\n\n  handleSliderChange = (event: any, newValue: any) => {\n    this.setState({\n      wpm: newValue\n    });\n  };\n\n  handleButtonOnClick() {\n    if (this.state.text) {\n      this.props.setReader(\"\", this.state.wpm);\n    }\n\n    this.props.setReader(this.state.text, this.state.wpm);\n  }\n\n  wpms: Mark[] = [];\n\n  initializeMarks() {\n    for (let i = this.minWpm; i <= this.maxWpm; i += this.step) {\n      this.wpms.push(createWpm(i));\n    }\n  }\n\n  render() {\n    const styles = {\n      textarea: {\n        width: \"100%\"\n      }\n    };\n\n    return (\n      <div>\n        <Grid container justify=\"center\" alignItems=\"center\" spacing={3}>\n          <Grid item xs={10}>\n            <TextField\n              id=\"reading-text-input\"\n              label=\"The text that should be displayed\"\n              multiline\n              rows=\"10\"\n              defaultValue=\"\"\n              style={styles.textarea}\n              margin=\"normal\"\n              variant=\"outlined\"\n              onChange={this.handleTextOnChange}\n            />\n          </Grid>\n          <Grid item xs={10}>\n            <Typography id=\"discrete-slider-always\" gutterBottom>\n              Adjust WPM (words per minute) speed\n            </Typography>\n            <Slider\n              defaultValue={this.defaultWpm}\n              getAriaValueText={valueToText}\n              aria-labelledby=\"discrete-slider-always\"\n              max={this.maxWpm}\n              min={this.minWpm}\n              step={this.step}\n              marks={this.wpms}\n              valueLabelDisplay=\"on\"\n              onChange={this.handleSliderChange}\n              style={{ margin: \"50px 0\" }}\n            ></Slider>\n          </Grid>\n          <Grid item xs={10}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.handleButtonOnClick}\n            >\n              Start reading\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default enhance(Text);\n","import React, { Component } from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nimport \"typeface-roboto\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\n\ntype WordProps = {\n  word: string;\n};\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: \"Roboto, Helvetica, Arial, sans-serif\",\n    fontSize: 15\n  }\n});\n\nexport class Word extends Component<WordProps> {\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        }}\n      >\n        <MuiThemeProvider theme={theme}>\n          <Typography id=\"worder\" gutterBottom>\n            <Box\n              fontFamily=\"Roboto, Helvetica, Arial, sans-serif\"\n              fontSize=\"50pt\"\n              fontWeight=\"bold\"\n              color=\"#282c34\"\n            >\n              {this.props.word || \"Your words will appear here!\"}\n            </Box>\n          </Typography>\n        </MuiThemeProvider>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport { Word } from \"../Word/Word\";\n\nimport { connect } from \"react-redux\";\nimport { mapStateToProps } from \"./connect.config\";\n\ntype ReaderProps = {\n  text: string;\n  wpm: number;\n};\n\ntype ReaderState = {\n  currentWord: string;\n  interval: number;\n  intervalId?: NodeJS.Timeout;\n  words: string[];\n};\n\nclass Reader extends Component<ReaderProps, ReaderState> {\n  private milisecondNumerator = 60000;\n\n  constructor(props: ReaderProps) {\n    super(props);\n\n    this.state = {\n      currentWord: \"\",\n      interval: 0,\n      intervalId: undefined,\n      words: []\n    };\n\n    this.tick = this.tick.bind(this);\n    this.computeInterval = this.computeInterval.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps: ReaderProps) {\n    this.initWords(nextProps);\n    this.computeInterval(nextProps);\n  }\n\n  initWords(props: ReaderProps = this.props) {\n    this.setWords(props.text.split(\" \"));\n  }\n\n  setWords(array: string[]) {\n    this.setState({\n      words: array\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalId) {\n      clearInterval(this.state.intervalId);\n    }\n  }\n\n  computeInterval(props: ReaderProps = this.props) {\n    if (this.state.intervalId) {\n      clearInterval(this.state.intervalId);\n    }\n\n    const interval = this.milisecondNumerator / props.wpm;\n    const intervalId = setInterval(this.tick, interval);\n\n    if (interval) {\n      this.setState({\n        interval,\n        intervalId\n      });\n    }\n  }\n\n  tick() {\n    this.nextWord();\n  }\n\n  nextWord() {\n    const array: string[] = [...this.state.words];\n\n    if (array.length) {\n      this.setState({\n        currentWord: array.shift() || \"\",\n        words: array\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Word word={this.state.currentWord} />\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(Reader);\n","export const mapStateToProps = (state: any) => ({\n  text: state.text,\n  wpm: state.wpm\n});\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Text from \"../Text/Text\";\nimport Reader from \"../Reader/Reader\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nexport default function CenteredGrid() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container justify=\"center\" alignItems=\"center\" spacing={3}>\n        <Grid item xs={10}>\n          <div\n            style={{\n              margin: \"100px 0\"\n            }}\n          >\n            <Reader></Reader>\n          </div>\n        </Grid>\n        <Grid item xs={10}>\n          <Text></Text>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { Menu, MenuItem } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1\n    }\n  })\n);\n\nconst NavBar: React.FC = () => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [anchorEl, setAnchorEl] = React.useState<null | SVGSVGElement>(null);\n\n  const handleClick = (event: React.MouseEvent<SVGSVGElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const toHomPage = () => {\n    history.push(\"/\");\n  };\n\n  const toContent = () => {\n    history.push(\"/read\");\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          ></IconButton>\n          <MenuIcon onClick={handleClick} />\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            <MenuItem onClick={toHomPage}>Home</MenuItem>\n            <MenuItem onClick={toContent}>Read</MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\n\nexport default () => {\n    return <div></div>\n}","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Content from \"./components/Content/Content\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport LandingPage from \"./components/LandingPage/LandingPage\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\" component={LandingPage} />\n        <Route exact path=\"/read\" component={Content} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const initialState = {\n  text: \"\",\n  wpm: 0\n};\n","import { SET_TEXT, SET_WPM, SET_READER } from \"./constants\";\nimport { initialState } from \"./intitialstate\";\n\nexport default (state = initialState, action: any) => {\n  switch (action.type) {\n    case SET_TEXT:\n      return {\n        ...state,\n        text: action.payload.text\n      };\n    case SET_WPM:\n      return {\n        ...state,\n        wpm: action.payload.wpm\n      };\n    case SET_READER:\n      return {\n        ...state,\n        text: action.payload.text,\n        wpm: action.payload.wpm\n      };\n    default:\n      return state;\n  }\n};\n","import { createStore } from \"redux\";\n\nimport readerReducer from \"./state/Reader/reducer\";\n\nconst store = createStore(readerReducer);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport store from \"./store\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App /> \n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}